name: CI
on: 
  workflow_dispatch:
    inputs:
      envoyTag:
        description: 'envoy tag to build'
        type: string
        required: true
jobs:
  build_envoy_alpine_amd64:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: get envoy version
        id: envoy-version
        run: |
          ENVOY_VERSION=$(./tools/envoy/version.sh ${ENVOY_TAG})
          echo echo "::set-output name=envoy_version::${ENVOY_VERSION}"

          ENVOY_BUILD_SHA=$(curl --fail --location --silent https://raw.githubusercontent.com/envoyproxy/envoy/"${ENVOY_TAG}"/.bazelrc | grep envoyproxy/envoy-build-ubuntu | sed -e 's#.*envoyproxy/envoy-build-ubuntu:\(.*\)#\1#'| uniq)
          echo echo "::set-output name=envoy_build_sha::${ENVOY_BUILD_SHA}"

          ENVOY_BUILD_IMAGE="envoyproxy/envoy-build-ubuntu:${ENVOY_BUILD_SHA}"
          echo echo "::set-output name=envoy_build_image::${ENVOY_BUILD_IMAGE}"

          LOCAL_BUILD_IMAGE="envoy-builder:${ENVOY_TAG}"
          echo echo "::set-output name=local_build_image::${LOCAL_BUILD_IMAGE}"
        env:
          ENVOY_TAG: ${{ github.event.inputs.envoyTag }}

      - name: download envoy sources
        id: envoy-sources
        run: |
          mkdir -p envoy-sources
          cd envoy-sources
          git init .
          git remote add origin https://github.com/envoyproxy/envoy.git

          git fetch origin --depth=1 ${{steps.envoy-version.outputs.envoy_version}}
          git reset --hard FETCH_HEAD
          rm -f .dockerignore

      - name: contrib enabled args
        id: contrib
        working-directory: envoy-sources
        run: |
          CONTRIB_ENABLED_ARGS=$(python ../tools/envoy/contrib_enabled_matrix.py)
          echo echo "::set-output name=contrib_enabled_args::${CONTRIB_ENABLED_ARGS}"

      - name: create bazel build cmd
        id: build-cmd 
        run: |
          BAZEL_BUILD_OPTIONS=("--config=clang" "--verbose_failures")
          BUILD_TARGET="//contrib/exe:envoy-static"
          BUILD_CMD=${BUILD_CMD:-"bazel build ${BAZEL_BUILD_OPTIONS[@]} -c opt ${BUILD_TARGET} ${CONTRIB_ENABLED_ARGS}"}
          echo echo "::set-output name=build_cmd::${BUILD_CMD}"

      - name: docker build
        run: echo ${{steps.build-cmd.outputs.build_cmd}}


  # build_envoy_centos_amd64:
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - name: Checkout step
  #       id: checkout
  #       uses: actions/checkout@v2

  #     - name: make build centos
  #       run: make build/envoy
  #       env:
  #         GOOS: linux
  #         GOARCH: amd64
  #         ENVOY_DISTRO: centos
  #         BUILD_ENVOY_FROM_SOURCES: true
  #         ENVOY_TAG: ${{ github.event.inputs.envoyTag }}
      
  #     - name: Zip artifact
  #       run: |
  #         if [[ -f build/artifacts-linux-amd64/envoy/envoy-${envoyTag#v}-centos ]]; then  
  #             tar -czvf build/artifacts-linux-amd64/envoy/envoy-${envoyTag#v}-centos.tar.gz build/artifacts-linux-amd64/envoy/envoy-${envoyTag#v}-centos
  #         fi
  #       env:
  #         envoyTag: ${{ github.event.inputs.envoyTag }}
      
  #     - name: Save artifact
  #       uses: actions/upload-artifact@v3
  #       id: save_artifacts
  #       with:
  #         name: artifacts
  #         path: |
  #           build/**/envoy/*.tar.gz