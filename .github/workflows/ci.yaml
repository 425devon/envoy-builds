name: CI
on: 
  workflow_dispatch:
    inputs:
      envoyTag:
        description: 'envoy tag to build'
        type: string
        required: true
jobs:
  # build_envoy_alpine_amd64:
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - name: Checkout step
  #       id: checkout
  #       uses: actions/checkout@v2
      
  #     - name: make space
  #       run: |
  #         sudo rm -rf /usr/share/dotnet
  #         sudo rm -rf /opt/ghc
  #         sudo rm -rf "/usr/local/share/boost"

  #     - name: make build alpine
  #       run: make build/envoy
  #       env:
  #         GOOS: linux
  #         GOARCH: amd64
  #         ENVOY_DISTRO: alpine
  #         BUILD_ENVOY_FROM_SOURCES: true
  #         ENVOY_TAG: ${{ github.event.inputs.envoyTag }}
  #         BAZEL_BUILD_EXTRA_OPTIONS: --remote_http_cache=http://127.0.0.1:28080
  #         BAZEL_BUILD_OPTIONS: >-
  #           --jobs=3

  #     - name: Zip artifact
  #       run: |
  #         if [[ -f build/artifacts-linux-amd64/envoy/envoy-${envoyTag#v}-alpine ]]; then  
  #             tar -czvf build/artifacts-linux-amd64/envoy/envoy-${envoyTag#v}-alpine.tar.gz build/artifacts-linux-amd64/envoy/envoy-${envoyTag#v}-alpine
  #         fi
  #       env:
  #         envoyTag: ${{ github.event.inputs.envoyTag }}
      
  #     - name: Save artifact
  #       uses: actions/upload-artifact@v3
  #       id: save_artifacts
  #       with:
  #         name: artifacts
  #         path: |
  #           build/**/envoy/*.tar.gz

  build_envoy_alpine_arm64:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout step
        id: checkout
        uses: actions/checkout@v2
      
      - name: make space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          install: true
          driver: "--platform linux/arm64"

      - name: Inspect builder
        run: |
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: make build alpine
        run: make build/envoy
        env:
          GOOS: linux
          GOARCH: arm64
          ENVOY_DISTRO: alpine
          BUILD_ENVOY_FROM_SOURCES: true
          ENVOY_TAG: ${{ github.event.inputs.envoyTag }}

      - name: Zip artifact
        run: |
          if [[ -f build/artifacts-linux-arm64/envoy/envoy-${envoyTag#v}-alpine ]]; then  
              tar -czvf build/artifacts-linux-arm64/envoy/envoy-${envoyTag#v}-alpine.tar.gz build/artifacts-linux-arm64/envoy/envoy-${envoyTag#v}-alpine
          fi
        env:
          envoyTag: ${{ github.event.inputs.envoyTag }}
      
      - name: Save artifact
        uses: actions/upload-artifact@v3
        id: save_artifacts
        with:
          name: artifacts
          path: |
            build/**/envoy/*.tar.gz

  # build_envoy_centos_amd64:
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - name: Checkout step
  #       id: checkout
  #       uses: actions/checkout@v2

  #     # Hacky solution to resolve running out of disk space
  #     # https://github.com/actions/virtual-environments/issues/2840#issuecomment-790492173
  #     - name: make space
  #       run: |
  #         sudo rm -rf /usr/share/dotnet
  #         sudo rm -rf /opt/ghc
  #         sudo rm -rf "/usr/local/share/boost"

  #     - name: make build centos
  #       run: make build/envoy
  #       env:
  #         GOOS: linux
  #         GOARCH: amd64
  #         ENVOY_DISTRO: centos
  #         BUILD_ENVOY_FROM_SOURCES: true
  #         ENVOY_TAG: ${{ github.event.inputs.envoyTag }}
      
  #     - name: Zip artifact
  #       run: |
  #         if [[ -f build/artifacts-linux-amd64/envoy/envoy-${envoyTag#v}-centos ]]; then  
  #             tar -czvf build/artifacts-linux-amd64/envoy/envoy-${envoyTag#v}-centos.tar.gz build/artifacts-linux-amd64/envoy/envoy-${envoyTag#v}-centos
  #         fi
  #       env:
  #         envoyTag: ${{ github.event.inputs.envoyTag }}
      
  #     - name: Save artifact
  #       uses: actions/upload-artifact@v3
  #       id: save_artifacts
  #       with:
  #         name: artifacts
  #         path: |
  #           build/**/envoy/*.tar.gz

  # build_envoy_darwin_amd64:
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout step
  #       id: checkout
  #       uses: actions/checkout@v2

  #     # https://github.com/envoyproxy/envoy/blob/main/bazel/README.md#quick-start-bazel-build-for-developers
  #     - name: install common deps
  #       run: | 
  #         brew install coreutils automake ninja clang-format
          
  #     - name: install full xcode
  #       run: |
  #         sudo rm -rf /Library/Developer/CommandLineTools
  #         softwareupdate --all --install --force
  #         sudo xcode-select --install

  #     # https://github.com/actions/runner/issues/1456#issue-1042407558
  #     - name: install and launch docker
  #       run: |
  #         HOMEBREW_NO_AUTO_UPDATE=1 brew install --cask docker
  #         sudo /Applications/Docker.app/Contents/MacOS/Docker --unattended --install-privileged-components
  #         open -a /Applications/Docker.app --args --unattended --accept-license
  #         echo "We are waiting for Docker to be up and running. It can take over 2 minutes..."
  #         while ! /Applications/Docker.app/Contents/Resources/bin/docker info &>/dev/null; do sleep 1; done

  #     - name: make build darwin
  #       run: make build/envoy
  #       env:
  #         GOOS: darwin
  #         GOARCH: amd64
  #         ENVOY_DISTRO: darwin
  #         BUILD_ENVOY_FROM_SOURCES: true
  #         ENVOY_TAG: ${{ github.event.inputs.envoyTag }}

  #     - name: Zip artifact
  #       run: |
  #         if [[ -f build/artifacts-darwin-amd64/envoy/envoy-${envoyTag#v}-darwin ]]; then  
  #             tar -czvf build/artifacts-darwin-amd64/envoy/envoy-${envoyTag#v}-darwin.tar.gz build/artifacts-darwin-amd64/envoy/envoy-${envoyTag#v}-darwin
  #         fi
  #       env:
  #         envoyTag: ${{ github.event.inputs.envoyTag }}
      
  #     - name: Save artifact
  #       uses: actions/upload-artifact@v3
  #       id: save_artifacts
  #       with:
  #         name: artifacts
  #         path: |
  #           build/**/envoy/*.tar.gz

  # build_envoy_windows_amd64:
  #   runs-on: windows-2019
  #   defaults:
  #     run:
  #       shell: bash
  #   steps:
  #     - name: Checkout step
  #       id: checkout
  #       uses: actions/checkout@v2
      
  #     - name: download envoy sources
  #       id: envoy-sources
  #       run: |
  #         mkdir -p envoy-sources
  #         cd envoy-sources
  #         git init .
  #         git remote add origin https://github.com/envoyproxy/envoy.git

  #         git fetch origin --depth=1 ${ENVOY_TAG}
  #         git reset --hard FETCH_HEAD
  #       env:
  #         ENVOY_TAG: ${{ github.event.inputs.envoyTag }}

  #     - name: modify dockerbuild
  #       working-directory: envoy-sources
  #       run: |
  #         sed -i 's/docker run --rm/docker run --memory 4096m --cpus 2 --rm/g' ./ci/run_envoy_docker.sh
  #         cat ./ci/run_envoy_docker.sh

  #     - name: Build Envoy
  #       working-directory: envoy-sources
  #       env:
  #         ENVOY_DOCKER_BUILD_DIR: "C:/build"
  #         PreferredToolArchitecture: x64
  #         # https://docs.bazel.build/versions/main/memory-saving-mode.html
  #         BAZEL_STARTUP_OPTIONS: >-
  #           --output_base=C:/_eb
  #         BAZEL_BUILD_OPTIONS: >-
  #           --jobs=3
  #           --local_ram_resources=HOST_RAM*.9
  #           --local_cpu_resources=HOST_CPUS-1
  #           --discard_analysis_cache
  #           --notrack_incremental_state
  #           --nokeep_state_after_build

  #       run: |
  #         ./ci/run_envoy_docker.sh 'ci/windows_ci_steps.sh'

  #     - name: Archive production artifacts
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: envoy_${{ github.sha }}
  #         path: |
  #           C:/build/envoy/source/exe/envoy.exe
      
      