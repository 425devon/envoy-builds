name: CI_AMD
on: 
  workflow_dispatch:
    inputs:
      envoyTag:
        description: 'envoy tag to build'
        type: string
        required: true
      s3CachePrefix:
        description: 'envoy s3 cache prefix'
        type: string
        default: envoy
jobs:
  build:
    env:
      BAZEL_DEFAULT_EXTRA_OPTIONS: >-
        --discard_analysis_cache 
        --nostamp 
        --nouse_action_cache
        --io_nice_level=4
    strategy:
      fail-fast: false
      matrix:
        distro: [alpine, centos, darwin]
        arch: [amd64]

        #mode: [fips, debug, stripped]
        #include / exlcude combinations

        allow_failure: [false]
    runs-on: ${{ matrix.distro != 'darwin' && 'ubuntu-latest' || 'macos-latest' }}
    continue-on-error: ${{ matrix.allow_failure }}
    steps:
    - uses: actions/checkout@v3

    - name: Trim Dependencies
      run: |
        if [[ ${{ matrix.distro }} != "darwin" ]]; then
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        fi
    - name: Install Additonal Dependencies
      if: ${{ matrix.distro == 'darwin' }}
      run: |
        # https://github.com/envoyproxy/envoy/blob/main/bazel/README.md#quick-start-bazel-build-for-developers 
        brew install coreutils automake ninja clang-format
        
        sudo rm -rf /Library/Developer/CommandLineTools
        softwareupdate --all --install --force
        sudo xcode-select --install
        # https://github.com/actions/runner/issues/1456#issue-1042407558
        HOMEBREW_NO_AUTO_UPDATE=1 brew install --cask docker
        sudo /Applications/Docker.app/Contents/MacOS/Docker --unattended --install-privileged-components
        open -a /Applications/Docker.app --args --unattended --accept-license
        echo "We are waiting for Docker to be up and running. It can take over 2 minutes..."
        while ! /Applications/Docker.app/Contents/Resources/bin/docker info &>/dev/null; do sleep 1; done
    - name: Run Bazel Cache server
      run: |
        CONTAINER_ID=$(docker run -dt \
          -e BAZEL_REMOTE_S3_AUTH_METHOD=access_key \
          -e BAZEL_REMOTE_S3_BUCKET=${{secrets.AWS_BAZEL_CACHE_S3_BUCKET}} \
          -e BAZEL_REMOTE_S3_ACCESS_KEY_ID=${{secrets.AWS_BAZEL_CACHE_ACCESS_KEY}} \
          -e BAZEL_REMOTE_S3_SECRET_ACCESS_KEY=${{secrets.AWS_BAZEL_CACHE_SECRET_KEY}} \
          -e BAZEL_REMOTE_S3_REGION=us-east-2 \
          -e BAZEL_REMOTE_ACCESS_LOG_LEVEL=all \
          -e BAZEL_REMOTE_S3_ENDPOINT=s3.us-east-2.amazonaws.com \
          -e BAZEL_REMOTE_DIR=/data \
          -e BAZEL_REMOTE_S3_PREFIX=${{ github.event.inputs.s3CachePrefix }}/${{matrix.distro}}-${{matrix.arch}}-latest \
          -p 9092:9092 \
          -p 8080:8080 \
          buchgr/bazel-remote-cache)
        echo "REMOTE_CACHE_SEVER_IP=$(docker inspect $CONTAINER_ID | jq -r '.[].NetworkSettings.Networks.bridge.IPAddress')" >> $GITHUB_ENV
    - name: Set Build Flags
      id: envoy_mode
      run: |
        echo "Set build flags based on mode, arch and os matrix"
        echo "I am NoOp for now."
    - name: Build envoy
      run: make build/envoy
      env:
        GOOS: ${{ matrix.distro != 'darwin' && 'linux' || matrix.distro }}
        GOARCH: ${{matrix.arch}}
        ENVOY_DISTRO: ${{matrix.distro}}
        BUILD_ENVOY_FROM_SOURCES: true
        ENVOY_TAG: ${{ github.event.inputs.envoyTag }}
        REMOTE_CACHE_SEVER_HOSTNAME:  ${{ matrix.distro != 'darwin' && 'bazel-remote-server' || 'localhost' }}
        REMOTE_CACHE_SEVER_IP:  ${{ matrix.distro != 'darwin' && env.REMOTE_CACHE_SEVER_IP || 'localhost' }}
        BAZEL_BUILD_EXTRA_OPTIONS: ${{env.BAZEL_DEFAULT_EXTRA_OPTIONS}}
        #BUILD_FLAGS: ${{steps.envoy_mode.outputs.build_flags}} 

    - name: Zip artifact
      run: |
        if [[ -f build/artifacts-${{env.GOOS}}-${{env.GOARCH}}/envoy/envoy-${envoyTag#v}-${{matrix.distro}} ]]; then  
          tar -czvf build/artifacts-${{env.GOOS}}-${{env.GOARCH}}/envoy/envoy-${envoyTag#v}-${{matrix.distro}}.tar.gz build/artifacts-${{env.GOOS}}-${{env.GOARCH}}/envoy/envoy-${envoyTag#v}-${{matrix.distro}}
        fi
      env:
        GOOS: ${{ matrix.distro != 'darwin' && 'linux' || matrix.distro }}
        GOARCH: ${{matrix.arch}}
        envoyTag: ${{ github.event.inputs.envoyTag }}

    - name: Save artifact
      uses: actions/upload-artifact@v3
      id: save_artifacts
      with:
        name: artifacts
        path: |
          build/**/envoy/*.tar.gz